package com.solvd.lab1.lecture2.vehicles;

import java.util.Objects;

public abstract class Vehicle implements VehicleBehaviour{
    private String licensePlate;
    private String brand;
    private float speed;

    public Vehicle(String licensePlate, String brand, float speed) {
        this.licensePlate = licensePlate;
        this.brand = brand;
        this.speed = speed;
    }

    //Getters & Setters
    public String getLicensePlate() {
        return licensePlate;
    }

    public void setLicensePlate(String licensePlate) {
        this.licensePlate = licensePlate;
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public float getSpeed() {
        return speed;
    }

    public void setSpeed(float speed) {
        this.speed = speed;
    }

    @Override
    public String toString() {
        return
                "LicensePlate='" + licensePlate + '\'' +
                ", brand='" + brand + '\'' +
                ", speed=" + speed ;
    }

    /*
    @Override
    public boolean equals(Object o) {
       if(o instanceof Vehicle){
           Vehicle other= (Vehicle) o;
           if(this.licensePlate == other.licensePlate)
               return true;
           else
               return false;
       }else
           return false;
    }*/

    //Autogenerated code
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Vehicle vehicle = (Vehicle) o;
        return licensePlate.equals(vehicle.licensePlate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(licensePlate);
    }
}
